/* Module Build File */

description = "Envas demo module"

ext {
  vaadinVersion     = '7.7.17'
    widgetset = 'com.neopsis.envas.demo.widgets.DefaultWidgetset'
}


niagaraModule {
    preferredSymbol = "neo"
    moduleName      = "envasDemo"
    runtimeProfile  = "wb"
    certAlias       = "neopsis-code-sign"
}

/**
 * Custom configurations
 */
configurations {
    provided {
        description  'Compile time libraries'
    }
}

dependencies {
    compile "Tridium:nre:4.7"
    compile "Tridium:baja:4.7"
    compile "Tridium:alarm-rt:4.7"
    compile "Tridium:alarm-wb:4.7"
    compile "Tridium:bajaui-wb:4.7"
    compile "Tridium:bql-rt:4.7"
    compile "Tridium:converters-rt:4.7"
    compile "Tridium:control-rt:4.7"
    compile "Tridium:gx-rt:4.7"
    compile "Tridium:history-rt:4.7"
    compile "Tridium:hx-wb:4.7"
    compile "Tridium:kitPx-wb:4.7"
    compile "Tridium:web-rt:4.7"
    compile "Tridium:wbutil-wb:4.7"
    compile "Tridium:workbench-wb:4.7"
    compile "Neopsis:envas-ux:0.9.10"
    compile "Neopsis:envas-wb:0.9.10"
    compile "Neopsis:envasAmCharts-wb:3.21.0"
    compile "Neopsis:envasCommons-rt:4.0.3"

    provided ("com.vaadin:vaadin-client-compiler:$vaadinVersion") {
        exclude group: 'org.eclipse.jetty'
    }
}

// *******************************************************
//       Compile DefaultWidgetset
// *******************************************************
task compileWidgetset(dependsOn: classes, type: JavaExec) {

    group 'envas'
    description = 'Compile Envas widgetset'

    ext.wsBuildDir = "src/main/resources//VAADIN/widgetsets"
    ext.wsCacheDir = "src/main/resources//VAADIN/gwt-unitCache"
    ext.wsExtraDir = "${project.buildDir}/tmp/widgetset"
    ext.wsWebInfDir = "${project.buildDir}/WEB-INF"
    inputs.file sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir ext.wsBuildDir

    doFirst {
        println '--------------------------------------------'
        println '           Building Widgetset               '
        println '--------------------------------------------'

        delete fileTree('src/main/resources/VAADIN/widgetsets') {
            //
        }
    }

    main = 'com.google.gwt.dev.Compiler'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.output.classesDir,      // Generated classes
                sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args =
            [
                    widgetset,
                    '-war', ext.wsBuildDir,
                    '-logLevel', 'WARN',
                    '-localWorkers', '4',
                    '-extra', ext.wsExtraDir,
                    '-failOnError',
                    '-strict'
            ]

    maxHeapSize = '2048M'

    jvmArgs = ['-Xss64M', '-Xms512M', '-Djava.awt.headless=true']

    doLast {
        ant.delete(dir: 'src/main/resources/VAADIN/widgetsets/WEB-INF')
        ant.delete(dir: ext.wsCacheDir)
    }
}

compileJava {
    options.compilerArgs = ["-profile", "compact3"]
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

jar {

    from('src/main/resources') {
        include '*.**'
    }

    if ( gradle.ext.target == "P") {
        exclude 'hotswap-agent.properties'
        exclude 'rebel.xml'
    }

    doLast {

        copy {
            from(project.buildDir.toString() + '/libs')
            into { file("${gradle.ext.niagara_modules}") }
        }
    }
}

